# =====================================
# TOYBOTSOLUTIONS - CONFIGURACIÓN DE ENTORNO
# =====================================

# === CONFIGURACIÓN DEL SERVIDOR ===
PORT=3000
NODE_ENV=development
JWT_SECRET=tu_clave_secreta_jwt_super_segura_aqui
JWT_EXPIRES_IN=24h

# === CONFIGURACIÓN DE CORS ===
# URL del frontend para permitir solicitudes CORS
CORS_ORIGIN=http://localhost:5173

# === CONFIGURACIÓN DE BASE DE DATOS ===
# SQLite local (desarrollo)
DATABASE_URL=./database.sqlite

# === CONFIGURACIÓN DE IA - OPENAI ===
# Clave API de OpenAI (para usar GPT)
OPENAI_API_KEY=sk-tu_openai_api_key_aqui

# === CONFIGURACIÓN DE LLM LOCAL (OPCIONAL) ===
# Configuración para usar LM Studio u otro LLM local
USE_LOCAL_LLM=false
LOCAL_LLM_URL=http://localhost:1234/v1/chat/completions
LOCAL_LLM_MODEL=google/gemma-3n-e4b

# === CONFIGURACIÓN DE AZURE SEARCH (RAG) ===
# Servicio de búsqueda de Azure para RAG
AZURE_SEARCH_ENDPOINT=https://tu-servicio.search.windows.net
AZURE_SEARCH_INDEX_NAME=tu-indice-nombre
AZURE_SEARCH_KEY=tu_azure_search_key_aqui

# === CONFIGURACIÓN DE AZURE OPENAI (OPCIONAL) ===
# Para usar Azure OpenAI en lugar de OpenAI directo
AZURE_OPENAI_ENDPOINT=https://tu-servicio.openai.azure.com/
AZURE_OPENAI_API_KEY=tu_azure_openai_key_aqui
AZURE_OPENAI_DEPLOYMENT_NAME=text-embedding-ada-002
AZURE_OPENAI_CHAT_DEPLOYMENT=gpt-4-turbo

# =====================================
# INSTRUCCIONES DE CONFIGURACIÓN
# =====================================

# 1. Copia este archivo como .env: cp .env.example .env
# 2. Completa las variables necesarias según tu configuración
# 3. Para desarrollo local básico, solo necesitas:
#    - JWT_SECRET
#    - OPENAI_API_KEY
# 4. Para funcionalidad RAG completa, configura también:
#    - AZURE_SEARCH_* variables
# 5. Para usar Azure OpenAI, configura:
#    - AZURE_OPENAI_* variables
